// This file is copied from IBM's closed source configuration. When updating it
// here, also update the closed source repository, or ask a maintainer to do so
// if you do not have access.
{
  "version": "0.2",
  "language": "en",
  "allowCompoundWords": true,
  "dictionaryDefinitions": [
    {
      "name": "qiskit",
      "path": "dictionaries/qiskit.txt",
      "addWords": true
    },
    {
      "name": "people",
      "path": "dictionaries/people.txt",
      "addWords": true
    }
  ],
  "dictionaries": [
    "qiskit",
    "people",
    "python",
    "python-common",
    "markdown",
    "softwareTerms",
    "scientific-terms-us"
  ],
  "words": ["casteist", "doxxing"],
  "ignoreRegExpList": [
    // Markdown links
    "\\((.*)\\)",
    // markdown code blocks. https://github.com/streetsidesoftware/vscode-spell-checker/issues/202#issuecomment-377477473
    "/^\\s*```[\\s\\S]*?^\\s*```/gm",
    // inline code blocks. https://stackoverflow.com/questions/41274241/how-to-capture-inline-markdown-code-but-not-a-markdown-code-fence-with-regex
    "\\`([^\\`].*?)\\`",
    // $$ ... $$ code blocks
    "\\$\\$\n(?:.*\n)*?\\$\\$",
    // markdown metadata block. e.g. title, description, etc.
    "---\n(?:.*\n)*?---",
    // words inside curly braces. e.g. {word}
    "{\\w+}",
    // words inside colons. e.g. :word:
    ":\\S+:",
    // words joined by underscores. e.g. hello_world, NEW_KEY_VALUE
    "\\S+_\\S+(_\\S+)*",
    // separate line <span id="" /> tags
    "^<span id=\\S+ />$",
    "^<span id=\\S+></span>$",
    // HTML elements
    "</?thead>",
    "</?iframe"
  ]
}
